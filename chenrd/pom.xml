<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.chenrd</groupId>
  <artifactId>chenrd</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <build>
  	<pluginManagement>
			<plugins>
				<!-- 编译插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				
				<!-- 单元测试插件 -->
				<plugin>  
			        <groupId>org.apache.maven.plugins</groupId>  
			        <artifactId>maven-surefire-plugin</artifactId>  
			        <version>2.19.1</version>
			        <configuration>  
			        	<skipTests>false</skipTests>  
			        </configuration>  
		      	</plugin>
				
				<!-- 发布插件 -->
				<plugin>  
		            <groupId>org.apache.maven.plugins</groupId>  
		            <artifactId>maven-deploy-plugin</artifactId>  
		            <version>2.7</version>
		        </plugin>
		        <!-- 源码插件 -->
				<plugin>  
			        <groupId>org.apache.maven.plugins</groupId>  
			        <artifactId>maven-source-plugin</artifactId>  
			        <version>2.4</version>  
			        <executions>  
			          <execution>  
			            <id>attach-sources</id>  
			            <phase>verify</phase><!--  要绑定到的生命周期的阶段 在verify之后，install之前执行下面指定的goal -->  
			            <goals>  
			              <goal>jar-no-fork</goal><!-- 类似执行mvn source:jar -->  
			            </goals>  
			          </execution>  
			        </executions>  
			      </plugin>
			</plugins>
			</pluginManagement>
		<resources>
	          <resource>
	              <directory>src/main/resources</directory>
	          </resource>
	          <resource>
	              <directory>src/main/java</directory>
	              <excludes>
	                  <exclude>**/*.java</exclude>
	              </excludes>
	          </resource>
	      </resources>
	      <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>1.0-alpha-6</version>
            </extension>
           </extensions>
	</build>
	<distributionManagement>    
	    <repository>    
	      <id>nexus-releases</id>    
	      <name>Nexus Release Repository</name>    
	      <url>http://hadoop2:8081/nexus/content/repositories/releases/</url>    
	    </repository>    
	    <snapshotRepository>    
	      <id>nexus-snapshots</id>    
	      <name>Nexus Snapshot Repository</name>    
	      <url>http://hadoop2:8081/nexus/content/repositories/snapshots/</url>    
	    </snapshotRepository>    
	</distributionManagement>
	<properties>
		<hibernate.version>4.1.0.Final</hibernate.version>
	  	<spring.version>4.0.0.RELEASE</spring.version>
	</properties>
	<modules>
		<module>../chenrd-example</module>
		<module>../chenrd-common</module>
		<module>../chenrd-spring</module>
		<module>../chenrd-ehcache</module>
		<module>../chenrd-hibernate</module>
		<module>../chenrd-business</module>
		
		<module>../chenrd-quartz</module>
	</modules>
</project>